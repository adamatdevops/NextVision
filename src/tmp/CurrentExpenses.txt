/* ./src/pages/economicSim/CurrentExpenses.tsx */
import React, { useEffect } from 'react';
import { Card, Typography, Form, InputNumber } from 'antd';
import styles from './css/AccountBalance.module.css';
import { useGlobalState } from '../../GlobalStateProvider'; // Import the hook

const { Title } = Typography;

interface CurrentExpensesProps {
    setExpenses: (expenses: number[]) => void;
}

const CurrentExpenses: React.FC<CurrentExpensesProps> = ({ setExpenses }) => {
    /* Use the useGlobalState hook to get context values and setters */

    const {
        state,
        setGasExpenses,
        setElectricityExpenses,
        setHouseMaintenanceExpenses,
        setGardeningExpenses,
        setNetworkingExpenses,
        setInternetExpenses,
        setVehicleExpenses,
        setSchoolExpenses,
        setPersonalLessonsExpenses,
        setTuitionsExpenses,
        setOtherEducationExpenses,
        setDentistExpenses,
        setWelfareExpenses,
        setFoodExpenses,
        setLaundryExpenses,
        setOtherExpenses
    } = useGlobalState();

    const {
        gasExpenses,
        electricityExpenses,
        houseMaintenanceExpenses,
        gardeningExpenses,
        networkingExpenses,
        internetExpenses,
        vehicleExpenses,
        schoolExpenses,
        personalLessonsExpenses,
        tuitionsExpenses,
        otherEducationExpenses,
        dentistExpenses,
        welfareExpenses,
        foodExpenses,
        laundryExpenses,
        otherExpenses
    } = state;

    useEffect(() => {
        if (state.familyStatus === 'married' && state.partnerCommunityStatus === 'community-member') { /* Change this condition. This is just a mockup */
            setGasExpenses(177); /* 177 per family member */
            setElectricityExpenses(0);
            setHouseMaintenanceExpenses(63);
            setGardeningExpenses(0);
            setNetworkingExpenses(100);
            setInternetExpenses(0);
            setVehicleExpenses(0);
            setSchoolExpenses(0);
            setPersonalLessonsExpenses(0);
            setTuitionsExpenses(0);
            setOtherEducationExpenses(0);
            setDentistExpenses(0); /* 70 for kid /110 Adults in 70% */
            setWelfareExpenses(0);
            setFoodExpenses(0);
            setLaundryExpenses(0);
            setOtherExpenses(0);
        }

        setExpenses([
            gasExpenses,
            electricityExpenses,
            houseMaintenanceExpenses,
            gardeningExpenses,
            networkingExpenses,
            internetExpenses,
            vehicleExpenses,
            schoolExpenses,
            personalLessonsExpenses,
            tuitionsExpenses,
            otherEducationExpenses,
            dentistExpenses,
            welfareExpenses,
            foodExpenses,
            laundryExpenses,
            otherExpenses
        ]);
    }, [
        gasExpenses,
        electricityExpenses,
        houseMaintenanceExpenses,
        gardeningExpenses,
        networkingExpenses,
        internetExpenses,
        vehicleExpenses,
        schoolExpenses,
        personalLessonsExpenses,
        tuitionsExpenses,
        otherEducationExpenses,
        dentistExpenses,
        welfareExpenses,
        foodExpenses,
        laundryExpenses,
        otherExpenses,
        setExpenses
    ]);

    return (
        <Card className={styles.card}>
            <Title level={4}>הוצאות</Title>
            <Form layout="vertical">
                <Form.Item label="גז">
                    <InputNumber
                        title="גז"
                        value={gasExpenses}
                        style={{ width: '100%' }}
                    /* onChange={setGas} */
                    />
                </Form.Item>
                <Form.Item label="חשמל">
                    <InputNumber
                        value={electricityExpenses}
                        style={{ width: '100%' }}
                    /* onChange={setElectricity} */
                    />
                </Form.Item>
                <Form.Item label="תחזוקת בית">
                    <InputNumber
                        value={houseMaintenanceExpenses}
                        style={{ width: '100%' }}
                    /* onChange={setHouseMaintenance} */
                    />
                </Form.Item>
                <Form.Item label="גננות">
                    <InputNumber
                        value={gardeningExpenses}
                        style={{ width: '100%' }}
                    /* onChange={setGardening} */
                    />
                </Form.Item>
                <Form.Item label="תקשורת">
                    <InputNumber
                        value={networkingExpenses}
                        style={{ width: '100%' }}
                        disabled
                    /* onChange={setNetworking} */
                    />
                </Form.Item>
                <Form.Item label="אינטרנט">
                    <InputNumber
                        value={internetExpenses}
                        style={{ width: '100%' }}
                    /* onChange={setInternet} */
                    />
                </Form.Item>
                <Form.Item label="רכב">
                    <InputNumber
                        value={vehicleExpenses}
                        style={{ width: '100%' }}
                    /* onChange={setVehicle} */
                    />
                </Form.Item>
                <Form.Item label="בית ספר">
                    <InputNumber
                        value={schoolExpenses}
                        style={{ width: '100%' }}
                    /* onChange={setSchool} */
                    />
                </Form.Item>
                <Form.Item label="שיעורים פרטיים">
                    <InputNumber
                        value={personalLessonsExpenses}
                        style={{ width: '100%' }}
                    /* onChange={setPersonalLessons} */
                    />
                </Form.Item>
                <Form.Item label="שכר לימוד">
                    <InputNumber
                        value={tuitionsExpenses}
                        style={{ width: '100%' }}
                    /* onChange={setTuitions} */
                    />
                </Form.Item>
                <Form.Item label="חינוך אחר">
                    <InputNumber
                        value={otherEducationExpenses}
                        style={{ width: '100%' }}
                    /* onChange={setOtherEducation} */
                    />
                </Form.Item>
                <Form.Item label="רופא שיניים">
                    <InputNumber
                        value={dentistExpenses}
                        style={{ width: '100%' }}
                    /* onChange={setDentist} */
                    />
                </Form.Item>
                <Form.Item label="רווחה">
                    <InputNumber
                        value={welfareExpenses}
                        style={{ width: '100%' }}
                    /* onChange={setWelfare} */
                    />
                </Form.Item>
                <Form.Item label="מזון">
                    <InputNumber
                        value={foodExpenses}
                        style={{ width: '100%' }}
                    /* onChange={setFood} */
                    />
                </Form.Item>
                <Form.Item label="כביסה">
                    <InputNumber
                        value={laundryExpenses}
                        style={{ width: '100%' }}
                    /* onChange={setLaundryExpenses} */
                    />
                </Form.Item>
                <Form.Item label="אחר">
                    <InputNumber
                        value={otherExpenses}
                        style={{ width: '100%' }}
                    /* onChange={setOtherExpenses} */
                    />
                </Form.Item>
            </Form>
        </Card>
    );
};

// interface SectionProps {
//     title: string;
//     value: number;

// /*     onChange: (value: number) => void; */
// }

// const ExpenseSection: React.FC<SectionProps> = ({ title, value,
//     /* onChange }) => { */
//     return (
//         <Card className={styles.sectionCard}>
//             <Title level={5}>{title}</Title>
//             <Form layout="vertical">
//                 <Form.Item label="סכום">
//                     <InputNumber
//                         value={value}

//                     /*     onChange= */
//                     /* onChange} */
//                         min={0}
//                         style={{ width: '100%' }}
//                         placeholder="הכנס סכום"
//                     />
//                 </Form.Item>
//             </Form>
//         </Card>
//     );
// };

export default CurrentExpenses;
